#include <iostream>

struct Node {
    int data;
    Node* next;
};

struct Queue {
    Node* front;
    Node* rear;
};

void enqueue(Queue& q, int val) {
    Node* newNode = new Node{val, nullptr};
    if (!q.rear) {
        q.front = q.rear = newNode;
        return;
    }
    q.rear->next = newNode;
    q.rear = newNode;
}

int dequeue(Queue& q) {
    if (!q.front) return -1;
    Node* temp = q.front;
    int value = temp->data;
    q.front = q.front->next;
    if (!q.front) q.rear = nullptr;
    delete temp;
    return value;
}

void printQueue(Queue q) {
    while (q.front) {
        std::cout << q.front->data << " ";
        q.front = q.front->next;
    }
    std::cout << "\n";
}

int main() {
    Queue q = {nullptr, nullptr};
    enqueue(q, 1);
    enqueue(q, 2);
    enqueue(q, 3);
    enqueue(q, 4);
    printQueue(q);
    
    dequeue(q);
    printQueue(q);
    
    enqueue(q, 10);
    printQueue(q);
    
    return 0;
}
